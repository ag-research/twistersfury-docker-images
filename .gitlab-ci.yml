image: docker:git

services:
  - docker:dind

stages:
    - build
    - test
    - release
    - deploy
    - secondary-build
    - secondary-test
    - secondary-release
    - secondary-deploy

PHP-CS-Fixer (Build):
    tags:
        - docker
    stage: build
    except:
      - scheduled
    only:
      changes:
        - php-cs-fixer/**
    script:
        - docker build --pull -t $CI_REGISTRY_IMAGE/php-cs-fixer:$CI_BUILD_REF_NAME ./php-cs-fixer
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/php-cs-fixer:$CI_BUILD_REF_NAME

PHP-CS-Fixer (Test):
    tags:
        - docker
    stage: test
    image: $CI_REGISTRY_IMAGE/php-cs-fixer:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - php-cs-fixer/**
    script:
        - php-cs-fixer --help

PHP-CS-Fixer (Release):
    tags:
        - docker
    stage: release
    script:
        - docker pull $CI_REGISTRY_IMAGE/php-cs-fixer:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/php-cs-fixer:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/php-cs-fixer:latest
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/php-cs-fixer:latest
    except:
      - scheduled
    only:
      changes:
        - php-cs-fixer/**

PHP-CS-Fixer (Deploy):
    tags:
        - docker
    stage: deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/php-cs-fixer:latest
        - docker tag $CI_REGISTRY_IMAGE/php-cs-fixer:latest twistersfury/php-cs-fixer:latest
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/php-cs-fixer:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - php-cs-fixer/**

#Nginx w/SSL
build:nginx:
    tags:
        - docker
    stage: build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/nginx:$CI_BUILD_REF_NAME ./nginx
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/nginx:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - nginx/**

test:nginx:
    tags:
        - docker
    stage: test
    image: $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME
    services:
        - name: $CI_REGISTRY_IMAGE/nginx:$CI_BUILD_REF_NAME
          alias: nginx.test
    variables:
        ENV_DOMAIN_NAME: nginx.test
        ENV_UPSTREAM_HOST: 127.0.0.1:8000
        ENV_LETS_ENCRYPT: 1
    script:
        - wget -qO - http://nginx.test/.well-known/ci.log
    except:
      - scheduled
    only:
      changes:
        - nginx/**

release:nginx:
    tags:
        - docker
    stage: release
    script:
        - docker pull $CI_REGISTRY_IMAGE/nginx:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/nginx:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/nginx:latest
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/nginx:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - nginx/**


deploy:nginx:
    tags:
        - docker
    stage: deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/nginx:latest
        - docker tag $CI_REGISTRY_IMAGE/nginx:latest twistersfury/nginx:latest
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/nginx:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - nginx/**


#PHP Debug
build:php:fpm-7.1-debug:
    tags:
        - docker
    stage: build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME ./php/7.1/fpm-debug
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - php/7.1/fpm-debug/**

test:php:fpm-7.1-debug:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME
    stage: test
    script:
        - php -i | grep "enable-debug"
    except:
      - scheduled
    only:
      changes:
        - php/7.1/fpm-debug/**

release:php:fpm-7.1-debug:
    tags:
        - docker
    stage: release
    script:
        - docker pull $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/php:fpm-7.1-debug
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/php:fpm-7.1-debug
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - php/7.1/fpm-debug/**

deploy:php:fpm-7.1-debug:
    tags:
        - docker
    stage: deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/php:$CI_BUILD_REF_NAME twistersfury/php:fpm-7.1-debug
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/php:fpm-7.1-debug
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - php/7.1/fpm-debug/**

# Latest Phalcon
build:phalcon:latest:
    tags:
        - docker
    stage: build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME ./phalcon/latest
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - phalcon/latest/**

test:phalcon:latest:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME
    stage: test
    script:
        - php -m | grep phalcon
    except:
      - scheduled
    only:
      changes:
        - phalcon/latest/**

release:phalcon:latest:
    tags:
        - docker
    stage: release
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/phalcon:latest
        - export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME php -r "echo \Phalcon\Version::get();"`
        - docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/phalcon:$PHALCON_TAG
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon:$PHALCON_TAG
        - docker push $CI_REGISTRY_IMAGE/phalcon:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon/latest/**

deploy:phalcon:latest:
    tags:
        - docker
    stage: deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon:latest
        - docker tag $CI_REGISTRY_IMAGE/phalcon:latest twistersfury/phalcon:latest
        - export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME php -r "echo \Phalcon\Version::get();"`
        - docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME twistersfury/phalcon:$PHALCON_TAG
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/phalcon:$PHALCON_TAG
        - docker push twistersfury/phalcon:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon/latest/**

# Latest Phalcon - PhpStan
build:phalcon:phpstan:
    tags:
        - docker
    stage: secondary-build
    script:
        - docker build --pull -t $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME-phpstan ./phalcon/tools/PHPStan
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME-phpstan
    except:
      - scheduled
    only:
      changes:
        - phalcon/tools/PHPStan/**


test:phalcon:phpstan:
    tags:
        - docker
    image:
        name: $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME-phpstan
        entrypoint: [""]
    stage: secondary-test
    script:
        - php -m | grep phalcon
        - which phpstan
    except:
      - scheduled
    only:
      changes:
        - phalcon/tools/PHPStan/**

release:phalcon:phpstan:
    tags:
        - docker
    stage: secondary-release
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME-phpstan
        - docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME-phpstan $CI_REGISTRY_IMAGE/phalcon:phpstan
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon:phpstan
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon/tools/PHPStan/**

deploy:phalcon:phpstan:
    tags:
        - docker
    stage: secondary-deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon:phpstan
        - docker tag $CI_REGISTRY_IMAGE/phalcon:phpstan twistersfury/phalcon:phpstan
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/phalcon:phpstan
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon/tools/PHPStan/**

#Docker
build:docker:latest:
    tags:
        - docker
    stage: build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME ./docker
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - docker/**

test:docker:latest:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME
    stage: test
    script:
        - which wget
        - which docker-compose
    except:
      - scheduled
    only:
      changes:
        - docker/**

release:docker:latest:
    tags:
        - docker
    stage: release
    before_script:
        - apk update
        - apk upgrade
        - apk --no-cache add curl
    script:
        - COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
        - docker pull $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/docker:latest
        - docker tag $CI_REGISTRY_IMAGE/docker:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/docker:$COMPOSE_VERSION
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/docker:latest
        - docker push $CI_REGISTRY_IMAGE/docker:$COMPOSE_VERSION
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - docker/**

deploy:docker:latest:
    tags:
        - docker
    stage: deploy
    before_script:
        - apk update
        - apk upgrade
        - apk --no-cache add curl
    script:
        - COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
        - docker pull $CI_REGISTRY_IMAGE/docker:latest
        - docker tag $CI_REGISTRY_IMAGE/docker:latest twistersfury/docker:latest
        - docker tag $CI_REGISTRY_IMAGE/docker:latest twistersfury/docker:$COMPOSE_VERSION
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/docker:latest
        - docker push twistersfury/docker:$COMPOSE_VERSION
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - docker/**

# Latest Cron
build:cron:latest:
    tags:
        - docker
    stage: build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/cron:$CI_BUILD_REF_NAME ./cron
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/cron:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - cron/**

release:cron:latest:
    tags:
        - docker
    stage: release
    script:
        - docker pull $CI_REGISTRY_IMAGE/cron:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/cron:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/cron:latest
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/cron:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - cron/**
        
deploy:cron:latest:
    tags:
        - docker
    stage: deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/cron:latest
        - docker tag $CI_REGISTRY_IMAGE/cron:latest twistersfury/cron:latest
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/cron:latest
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - cron/**


#XDebug Phalcon
.build:phalcon:xdebug:
    tags:
        - docker
    stage: secondary-build
    script:
        - alias 'normalRun=[ ! -z "$ENV_FORCE_BUILD" ]'
        - alias 'dockerize=git whatchanged HEAD^! | grep phalcon/xdebug/Dockerfile > /dev/null'
        - (normalRun || dockerize) && docker build -t $CI_REGISTRY_IMAGE/phalcon-xdebug:$CI_BUILD_REF_NAME ./phalcon/xdebug
        - (normalRun || dockerize) && echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - (normalRun || dockerize) && docker push $CI_REGISTRY_IMAGE/phalcon-xdebug:$CI_BUILD_REF_NAME
        - dockerize || (echo "no need to build new docker image" && exit 0)

.test:phalcon:xdebug:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/phalcon-xdebug:$CI_BUILD_REF_NAME
    stage: secondary-test
    script:
        - php -m | grep xdebug

.release:phalcon:xdebug:
    tags:
        - docker
    stage: secondary-release
    script:
        - alias 'normalRun=[ ! -z "$ENV_FORCE_BUILD" ]'
        - alias 'dockerize=git whatchanged HEAD^! | grep phalcon/xdebug/Dockerfile > /dev/null'
        - (normalRun || dockerize) && docker pull $CI_REGISTRY_IMAGE/phalcon-xdebug:$CI_BUILD_REF_NAME
        - (normalRun || dockerize) && docker tag $CI_REGISTRY_IMAGE/phalcon-xdebug:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/phalcon:xdebug
        - (normalRun || dockerize) && export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME php -r "echo \Phalcon\Version::get();"`
        - (normalRun || dockerize) && docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/phalcon:xdebug-$PHALCON_TAG
        - (normalRun || dockerize) && echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - (normalRun || dockerize) && docker push $CI_REGISTRY_IMAGE/phalcon:xdebug-$PHALCON_TAG
        - (normalRun || dockerize) && docker push $CI_REGISTRY_IMAGE/phalcon:xdebug
        - dockerize || (echo "no need to build new docker image" && exit 0)
    only:
        - master

.deploy:phalcon:xdebug:
    tags:
        - docker
    stage: secondary-deploy
    script:
        - alias 'normalRun=[ ! -z "$ENV_FORCE_BUILD" ]'
        - alias 'dockerize=git whatchanged HEAD^! | grep phalcon/xdebug/Dockerfile > /dev/null'
        - (normalRun || dockerize) && docker pull $CI_REGISTRY_IMAGE/phalcon:xdebug
        - (normalRun || dockerize) && docker tag $CI_REGISTRY_IMAGE/phalcon:xdebug twistersfury/phalcon:xdebug
        - (normalRun || dockerize) && export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME php -r "echo \Phalcon\Version::get();"`
        - (normalRun || dockerize) && docker tag $CI_REGISTRY_IMAGE/phalcon:$CI_BUILD_REF_NAME twistersfury/phalcon:xdebug-$PHALCON_TAG
        - (normalRun || dockerize) && echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - (normalRun || dockerize) && docker push twistersfury/phalcon:xdebug-$PHALCON_TAG
        - (normalRun || dockerize) && docker push twistersfury/phalcon:xdebug
        - dockerize || (echo "no need to build new docker image" && exit 0)
    only:
        - master
        
#XDebug Phalcon
build:phalcon:dev-tools:
    tags:
        - docker
    stage: secondary-build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/phalcon-devtools:$CI_BUILD_REF_NAME ./phalcon-devtools
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon-devtools:$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - phalcon-devtools/**

test:phalcon:dev-tools:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/phalcon-devtools:$CI_BUILD_REF_NAME
    stage: secondary-test
    script:
        - phalcon | grep 'Phalcon DevTools'
    except:
      - scheduled
    only:
      changes:
        - phalcon-devtools/**

release:phalcon:dev-tools:
    tags:
        - docker
    stage: secondary-release
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon-devtools:$CI_BUILD_REF_NAME
        - docker tag $CI_REGISTRY_IMAGE/phalcon-devtools:$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/phalcon-devtools
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/phalcon-devtools
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon-devtools/**

deploy:phalcon:dev-tools:
    tags:
        - docker
    stage: secondary-deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/phalcon-devtools
        - docker tag $CI_REGISTRY_IMAGE/phalcon-devtools twistersfury/phalcon-devtools
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/phalcon-devtools
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - phalcon-devtools/**

#PHP Debug
build:zephir:phalcon:
    tags:
        - docker
    stage: secondary-build
    script:
        - docker build -t $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME ./zephir/phalcon/
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME
    except:
      - scheduled
    only:
      changes:
        - zephir/phalcon/**

test:zephir:phalcon:
    tags:
        - docker
    image: $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME
    stage: secondary-test
    script:
        - php -m | grep Zephir
    except:
      - scheduled
    only:
      changes:
        - zephir/phalcon/**

release:zephir:phalcon:
    tags:
        - docker
    stage: secondary-release
    script:
        - docker pull $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME
        - export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME php -r "echo \Phalcon\Version::get();"`
        - docker tag $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/zephir:phalcon
        - docker tag $CI_REGISTRY_IMAGE/zephir:phalcon-$CI_BUILD_REF_NAME $CI_REGISTRY_IMAGE/zephir:phalcon-$PHALCON_TAG
        - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
        - docker push $CI_REGISTRY_IMAGE/zephir:phalcon
        - docker push $CI_REGISTRY_IMAGE/zephir:phalcon-$PHALCON_TAG
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - zephir/phalcon/**

deploy:zephir:phalcon:
    tags:
        - docker
    stage: secondary-deploy
    script:
        - docker pull $CI_REGISTRY_IMAGE/zephir:phalcon
        - export PHALCON_TAG=`docker run --rm $CI_REGISTRY_IMAGE/zephir:phalcon php -r "echo \Phalcon\Version::get();"`
        - docker tag $CI_REGISTRY_IMAGE/zephir:phalcon twistersfury/zephir:phalcon
        - docker tag $CI_REGISTRY_IMAGE/zephir:phalcon twistersfury/zephir:phalcon-$PHALCON_TAG
        - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
        - docker push twistersfury/zephir:phalcon
        - docker push twistersfury/zephir:phalcon-$PHALCON_TAG
    except:
      - scheduled
    only:
      refs:
        - master
      changes:
        - zephir/phalcon/**